version: '3.7'

services:
  node:
    container_name: ${APP_NAME}
    build:
        context: .
        dockerfile: docker/docker-cr.dockerfile
    volumes:
        - .:/usr/src/app
    working_dir: /usr/src/app
    ports:
        - '${APP_PORT}:${APP_PORT}'
    networks:
        - cr-network

  postgis:
    image: mdillon/postgis
    container_name: postgis
    volumes:
        - postgis-data:/var/lib/postgresql
    environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
        - "5432:5432"
    restart: on-failure
    networks:
        - cr-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
        - postgis
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
        - pgadmin:/root/.pgadmin
    ports:
        - "5050:80"
    networks:
        - cr-network
    
#   postgis:
#     image: kartoza/postgis:12.0
#     container_name: postgis
#     volumes:
#       - postgis-data:/var/lib/postgresql
#       - postgisbackups:/backups
#     environment:
#       # If you need to create multiple database you can add coma separated databases eg gis,data
#       - POSTGRES_DB=gis
#       - POSTGRES_USER=docker
#       - POSTGRES_PASS=docker
#       - ALLOW_IP_RANGE=0.0.0.0/0
#       # Add extensions you need to be enabled by default in the DB. Default are the five specified below
#       - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
#     ports:
#       - 5432:5432
#     restart: on-failure
#     networks:
#         - cr-network
#     # shm_size: 64M

#   postgisbackups:
#     image: kartoza/pg-backup:12.0
#     hostname: pg-backups
#     volumes:
#       - postgisbackups:/backups
#     environment:
#       - DUMPPREFIX=PG_db
#       - POSTGRES_USER=docker
#       - POSTGRES_PASS=docker
#       - POSTGRES_PORT=5432
#       - POSTGRES_HOST=db
#       - POSTGRES_DBNAME=gis
#     restart: on-failure
#     depends_on:
#         - 'postgis'
#     networks:
#         - cr-network

volumes:
    postgis-data:
        driver: local
    pgadmin:
        driver: local
    # postgisbackups:
    #     driver: local

networks:
    cr-network:
        driver: bridge